/*
Biorhythms
题意：人自出生起就有体力，情感和智力三个生理周期，分别为23，28和33天。一个周期内有一天为峰值，在这一天，人在对应的方面（体力，情感或智力）表现最好。通常这三个周期的峰值不会是同一天。现在给出三个日期，分别对应于体力，情感，智力出现峰值的日期。然后再给出一个起始日期，要求从这一天开始，算出最少再过多少天后三个峰值同时出现。
分析：首先我们要知道，任意两个峰值之间一定相距整数倍的周期。假设一年的第N天达到峰值，则下次达到峰值的时间为N+Tk(T是周期，k是任意正整数)。所以，三个峰值同时出现的那一天(S)应满足
      S = N1 + T1*k1 = N2 + T2*k2 = N3 + T3*k3，N1,N2,N3分别为为体力，情感，智力出现峰值的日期， T1，T2,T3分别为体力，情感，智力周期。 我们需要求出k1,k2,k3三个非负整数使上面的等式成立。
     想直接求出k1,k2,k3貌似很难，但是我们的目的是求出S， 可以考虑从结果逆推。根据上面的等式，S满足三个要求：除以T1余数为N1，除以T2余数为N2，除以T3余数为N3。这样我们就把问题转化为求一个最小数，该数除以T1余N1，除以T2余N2,除以T3余N3。这就是著名的中国剩余定理，时间复杂度可达到O(1)。 
     先算出逆元，然后套公式，注意负数和取到0的情况 
*/
#include<iostream>
using namespace std;
const int LCM=23*28*33,X1=5544,X2=14421,X3=1288;//LCM:lcm(23,28,33),X1:(33*28)^-1(mod 23),X2:(23*33)^-1(mod 28),X3:(23*28)^-1(mod 33) 
int main(){
	int p,e,i,d,kase=0;
	while(cin>>p>>e>>i>>d,!(p==-1 && e==-1 && i==-1 && d==-1)){
		int n=(X1*p+X2*e+X3*i-d+LCM)%LCM;
		if(n==0)n=21252;
		cout<<"Case "<<++kase<<": the next triple peak occurs in "<<n<<" days."<<endl;
	}
	return 0;
}


